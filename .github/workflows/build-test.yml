name: Build and Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop, 'feature/*', 'bugfix/*' ]

env:
  DOTNET_VERSION: '8.0.121'
  SOLUTION_PATH: 'src/Azure.DataApiBuilder.sln'

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        global-json-file: global.json

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }} --configfile Nuget.config

    - name: Build solution
      run: |
        dotnet build ${{ env.SOLUTION_PATH }} \
          --configuration Release \
          --no-restore \
          --verbosity normal

    - name: Run tests
      run: |
        dotnet test ${{ env.SOLUTION_PATH }} \
          --configuration Release \
          --no-build \
          --verbosity normal \
          --logger trx \
          --results-directory test-results-${{ matrix.os }} \
          --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: test-results-${{ matrix.os }}/

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        global-json-file: global.json

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }} --configfile Nuget.config

    - name: Build solution
      run: |
        dotnet build ${{ env.SOLUTION_PATH }} \
          --configuration Release \
          --no-restore

    - name: Run code analysis
      run: |
        dotnet build ${{ env.SOLUTION_PATH }} \
          --configuration Release \
          --verbosity normal \
          --no-restore \
          /p:RunAnalyzersDuringBuild=true \
          /p:TreatWarningsAsErrors=true

    - name: Check formatting
      run: |
        dotnet format ${{ env.SOLUTION_PATH }} \
          --verify-no-changes \
          --verbosity diagnostic